{"version":3,"sources":["testVariables.js","AddClient.js","AddClientModal.js","AllClients.js","Home.js","CreateConfigModal.js","RenderService.js","AddService.js","AddServiceModal.js","AddHardware.js","AddHardwareModal.js","ViewClient.js","AppRouter.js","App.js","index.js"],"names":["serviceBlankState","service","plan","medium","red","ip","dg","mask","vlan","ip_mon","ip_mon_router","dg_mon","mask_mon","vlan_mon","lan_red","lan_ip","lan_dg","lan_mask","mode","sites","hub","spokes","device","device_router","nhead","ntale","obra","rack","patchera","position","nexus","nexus_port","dist","att","cmts","mac","interface","interface_router","pm","im","status","blankState","abonado","name","telefono","email","address","street","apto","location","city","services","hardware","validation","valid","invalid","message","editable","hideEditButton","ADIConfigTemplate","props","AddClient","client","state","submit","handleChange","bind","addClient","e","target","value","match","name_key","name_value","this","setState","fetch","then","res","json","data","action","_id","method","body","JSON","stringify","headers","toggle","reload","catch","err","console","error","preventDefault","log","Form","onSubmit","Row","Group","md","as","Col","controlId","Label","Control","disabled","isValid","isInvalid","maxLength","onChange","type","placeholder","required","Feedback","Button","variant","className","onClick","Component","AddClientModal","useState","show","setShow","handleClose","hidden","title","Modal","onHide","Header","closeButton","Title","Body","AllClients","clients","fetchClients","client_id","service_id","what","window","confirm","pathname","Fragment","inline","style","right","top","InputGroup","Prepend","drop","handleSearchChange","search","filterTable","Table","size","striped","bordered","hover","map","length","key","to","deleteClient","colSpan","Home","templates","ADIFO","L2VPN","CreateConfigModal","config","setConfig","linkhref","setLinkhref","copied","setCopied","makeTextFile","text","Blob","URL","createObjectURL","output","template","scrollable","xl","clientName","Footer","onCopy","href","download","AccordionToggle","expanded","setExpanded","Accordion","Toggle","useAnchor","Card","eventKey","idx","Badge","RenderService","Collapse","deleteService","id","wrapped","sm","split","spoke","site","RenderHardware","model","serial","description","deleteDevice","ServicioCM","modifier","children","ServicioFO","DireccionamientoFO","Patcheo","AddService","addService","oct123","oct4","parseInt","service_ip","toString","service_dg","Tabs","defaultActiveKey","Tab","Check","label","checked","adi","l2vpn","l3vpn","ttt","AddServiceModal","AddHardware","addDevice","AddHardwareModal","ViewClient","searchClient","p","path","history","push","AppRouter","Navbar","bg","expand","Brand","aria-controls","Nav","Link","NavDropdown","Item","Divider","exact","component","render","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5cadcd70.chunk.js","sourcesContent":["const serviceBlankState = {\n  service: '',\n  plan: '',\n  medium: '',\n  red: '',\n  ip: '',\n  dg: '',\n  mask: '',\n  vlan: '',\n  ip_mon: '',\n  ip_mon_router: '',\n  dg_mon: '',\n  mask_mon: '',\n  vlan_mon: '152',\n  lan_red: '',\n  lan_ip: '',\n  lan_dg: '',\n  lan_mask: '',\n  mode: '',\n  sites: {hub: '', spokes: ''},\n  device: '',\n  device_router: '',\n  nhead: '112120',\n  ntale: '112120',\n  hub: '',\n  obra: '',\n  rack: '',\n  patchera: '',\n  position: '',\n  nexus: 'N93180-',\n  nexus_port: '',\n  dist: '',\n  att: '',\n  cmts: '',\n  mac: '',\n  interface: '',\n  interface_router: '',\n  pm: '',\n  im: '',\n  status: '',\n};\n\nconst blankState = {\n    abonado: \"\",\n    name: \"\",\n    telefono: \"\",\n    email: \"\",\n    address: {\n        street: \"\",\n        apto: \"\",\n        location: \"\",\n        city: \"\"\n    },\n    services: [],\n    hardware: [],\n    pm: \"\",\n    im: \"\",\n    status: \"Implementacion\",\n    validation: {\n        abonado: { valid: false, invalid: false, message: '', editable: true }\n    },\n    hideEditButton: true\n}\n\nconst dangeloState = {\n    abonado: 4681829,\n    name: \"Dangelo SA\",\n    telefono: \"(011) 58160533\",\n    email: \"dguanipa@telecentro.net.ar\",\n    address: {\n        street: \"Mendoza 2152\",\n        apto: \"1B\",\n        location: \"Belgrano\",\n        city: \"CABA\"\n    },\n    services: [\n        {\n            service: \"ADI\",\n            plan: \"50\",\n            tech: \"FO\",\n            red: \"180.80.8.0/30\",\n            ip: \"180.80.8.1\",\n            dg: \"180.80.8.2\",\n            mask: \"255.255.255.252\",\n            vlan: \"2152\",\n            ip_mon: \"10.252.1.23\",\n            dg_mon: \"10.252.1.30\",\n            mask_mon: \"255.255.255.240\",\n            vlan_mon: \"152\" //default 152\n        },\n        {\n            service: \"L2VPN\",\n            plan: \"15\",\n            tech: \"CO\",\n            vlan: \"2122\",\n            type: \"PaP\",\n            contra: \"4545432\",\n            cm: \"FASTV3.1\",\n            mac: \"34.fd.34.df.43.er\",\n        },\n        {\n            service: \"TTT\",\n            plan: \"30/100\",\n            tech: \"CO\",\n            red: \"180.80.8.0/30\",\n            ip: \"180.80.8.1\",\n            dg: \"180.80.8.2\",\n            mask: \"255.255.255.252\",\n            vlan: \"2152\",\n            head: 1121200000,\n            tale: 1121200099,\n            cm: \"FASTV3.1\",\n            mac: \"34.fd.34.df.43.er\",\n        },\n    ],\n    hardware: {\n        switch: {\n            code: \"74500\",\n            model: \"SG350\",\n            serial: \"PSZ430190BY\"\n        },\n        sfp: {\n            code: \"74500\",\n            model: \"OSI-D20K\",\n            serial: \"ZZ1802022\"\n        },\n        patch: {\n            code: \"74500\",\n            model: \"5M\",\n            serial: \"171645221\"\n        }\n    },\n    pm: \"cmontero\",\n    im: \"rmontilla\",\n    status: \"Creado\"\n}\n\nconst rogerState = {\n    abonado: 4680000,\n    name: \"Roger SA\",\n    telefono: \"(011) 58160533\",\n    email: \"dguanipa@telecentro.net.ar\",\n    address: {\n        street: \"Mendoza 2152\",\n        apto: \"1B\",\n        location: \"Belgrano\",\n        city: \"CABA\"\n    },\n    services: [\n        {\n            service: \"ADI\",\n            plan: \"50\",\n            tech: \"FO\",\n            red: \"180.80.8.0/30\",\n            ip: \"180.80.8.1\",\n            dg: \"180.80.8.2\",\n            mask: \"255.255.255.252\",\n            vlan: \"2152\",\n            ip_mon: \"10.252.1.23\",\n            dg_mon: \"10.252.1.30\",\n            mask_mon: \"255.255.255.240\",\n            vlan_mon: \"152\" //default 152\n        },\n        {\n            service: \"L2VPN\",\n            plan: \"15\",\n            tech: \"CO\",\n            vlan: \"2122\",\n            type: \"PaP\",\n            contra: \"4545432\",\n            cm: \"FASTV3.1\",\n            mac: \"34.fd.34.df.43.er\",\n        },\n        {\n            service: \"TTT\",\n            plan: \"30/100\",\n            tech: \"CO\",\n            red: \"180.80.8.0/30\",\n            ip: \"180.80.8.1\",\n            dg: \"180.80.8.2\",\n            mask: \"255.255.255.252\",\n            vlan: \"2152\",\n            head: 1121200000,\n            tale: 1121200099,\n            cm: \"FASTV3.1\",\n            mac: \"34.fd.34.df.43.er\",\n        },\n    ],\n    hardware: [\n        {\n            device: \"SG350\",\n            code: \"74500\",\n            model: \"SG350\",\n            serial: \"PSZ430190BY\"\n        },\n        {\n            device: \"SFP\",\n            code: \"74500\",\n            model: \"OSI-D20K\",\n            serial: \"ZZ1802022\"\n        },\n        {\n            device: \"PATCH\",\n            code: \"74500\",\n            model: \"5M\",\n            serial: \"171645221\"\n        }\n    ],\n    pm: \"cmontero\",\n    im: \"rmontilla\",\n    status: \"Creado\"\n}\n\nconst ADIConfigTemplate = (props) => {\n    const { abonado, service} = props;\n    var output = `conf t\nhostname CPE-SG350-${abonado}\nusername telecentro privilege 15 password Inst4l4c10n3s\nusername backups privilege 15 password c0rp0backup!\nenable password Inst4l4c10n3s\nbanner login #\n!\n!\nEste sistema es propiedad de Telecentro S.A.\nESTA PROHIBIDO EL ACCESO A PERSONAL NO AUTORIZADO.\nUd. debe  tener permiso explicito para acceder a este\nequipo.  Todas las actividades son monitoreadas y re-\ngistradas. Cualquier violacion de acceso resultara en\nacciones legales.\n-----------------------------------------------------\n#\nip ssh server\nip ssh-client username telecentro\nip ssh-client password Inst4l4c10n3s\nip access-list extended 152\npermit ip 192.168.0.0 0.0.255.255 any\npermit ip 10.210.0.0 0.0.255.255 any\ndeny ip any any\n!\nvlan 152\n!\nvlan ${service.vlan}\n!\ninterface vlan 152\nname MONITORIA-CPE\nip address ${service.ip_mon} ${service.mask_mon}\n!\nip default-gateway ${service.dg_mon}\n!\ninterface gigabitethernet9\nno macro auto smartport\ndescription ##CLIENTE##Link-to-HUB-${service.hub}_SW-${service.nexus}(Eth${service.nexus_port})\nswitchport mode trunk\nswitchport trunk allowed vlan add 152,${service.vlan}\nno macro auto smartport\nno shutdown\n!\ninterface gigabitethernet1\ndescription ##CLIENTE##${service.service}-${service.plan}Mbps${service.sites ? `Contra ${service.sites}`: ''}\nswitchport mode access\nswitchport access vlan ${service.vlan}\nno macro auto smartport\nno shutdown\n!\ninterface gigabitethernet2\nshutdown\ninterface gigabitethernet3\nshutdown\ninterface gigabitethernet4\nshutdown\ninterface gigabitethernet5\nshutdown\ninterface gigabitethernet6\nshutdown\ninterface gigabitethernet7\nshutdown\ninterface gigabitethernet8\nshutdown\ninterface vlan 1\nshutdown\nsnmp-server server\nsnmp-server community TELECENTRO-${abonado} ro view Default\nsntp server 192.168.15.74\nclock source sntp\nclock timezone 1 -3\nexit`\n    return output\n}\nexport { dangeloState, blankState, serviceBlankState, ADIConfigTemplate };\n\n","import React, { Component } from 'react';\nimport { Col, Form, Button } from 'react-bootstrap';\nimport { blankState } from './testVariables'\n\nexport default class AddClient extends Component {\n\n  constructor(props) {\n    super(props);\n    if (props.client) {\n      this.state = {\n        ...props.client,\n        validation: {\n          abonado: {\n            valid: false,\n            invalid: false,\n            message: '',\n            editable: false\n          },\n          submit: true\n        }\n      };\n    } else {\n      this.state = blankState;\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addClient = this.addClient.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    if (name.match(/\\./)) {\n      const name_key = name.match(/(\\D+)\\./)[1];\n      const name_value = name.match(/\\.(\\D+)/)[1];\n      if (name_key === 'address') {\n        this.setState({ [name_key]: { ...this.state[name_key], [name_value]: value } });\n      }\n    } else if (name === 'abonado') {\n      if (value.match(/[^0-9]/)) {\n        return\n      }\n      this.setState({ [name]: value });\n      if (value.match(/^\\d{7}$/)) {\n        fetch(`/clients/client/${value}`)\n          .then(res => res.json())\n          .then(data => {\n            if (!data) {\n              this.setState({\n                validation: {\n                  ...this.state.validation,\n                  abonado: { valid: true, invalid: false, editable: true, message: '' },\n                  submit: true\n                }\n              });\n            } else {\n              this.setState({\n                validation: {\n                  ...this.state.validation,\n                  [name]: { valid: false, invalid: true, message: 'Abonado ya existe', editable: true },\n                  submit: false\n                }\n              });\n            }\n          });\n      } else {\n        this.setState({\n          validation: {\n            ...this.state.validation,\n            [name]: { valid: false, invalid: true, message: 'Debe tener al menos 7 digitos', editable: true },\n            submit: false\n          }\n        })\n      }\n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n  }\n\n  addClient(e) {\n    if (this.props.action === 'edit') {\n      fetch(`/clients/${this.props.client._id}`, {\n        method: 'PUT',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          this.setState(blankState)\n          this.props.toggle();\n          this.props.reload();\n        })\n        .catch(err => console.error(err));\n      e.preventDefault();\n\n    // } else if (this.props.action === 'add') {\n    } else if (this.props.action === 'Agregar') {\n      fetch('/clients', {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(() => {\n          this.props.toggle();\n          this.props.reload();\n        })\n        .catch(err => console.error(err));\n      e.preventDefault();\n\n    } else {\n\n      fetch('/clients', {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          console.log(data);\n          this.setState(blankState);\n        })\n        .catch(err => console.error(err));\n      e.preventDefault();\n\n    }\n  }\n\n  render() {\n    const validation = this.state.validation;\n    return (\n      <Form onSubmit={this.addClient} >\n        <Form.Row>\n          <Form.Group md=\"3\" as={Col} controlId=\"\" >\n            <Form.Label>Abonado</Form.Label>\n            <Form.Control\n              disabled={!validation.abonado.editable}\n              isValid={validation.abonado.valid}\n              isInvalid={validation.abonado.invalid}\n              value={this.state.abonado}\n              maxLength=\"7\"\n              name=\"abonado\"\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"5555555\"\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">{validation.abonado.message}</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"valid\">Valido!</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group md as={Col} controlId=\"\">\n            <Form.Label>Nombre</Form.Label>\n            <Form.Control value={this.state.name} name=\"name\" onChange={this.handleChange} type=\"text\" placeholder=\"Telecentro SA\" required />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n          <Form.Group md as={Col} controlId=\"\">\n            <Form.Label>Telefono</Form.Label>\n            <Form.Control value={this.state.telefono} name=\"telefono\" onChange={this.handleChange} type=\"text\" placeholder=\"(011) 6380-9500\" />\n          </Form.Group>\n\n          <Form.Group md as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control value={this.state.email} name=\"email\" onChange={this.handleChange} type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"\">\n            <Form.Label>Calle</Form.Label>\n            <Form.Control value={this.state.address.street} name=\"address.street\" onChange={this.handleChange} type=\"text\" placeholder=\"Av. Congreso 2440\" />\n          </Form.Group>\n\n          <Form.Group md=\"4\" as={Col} controlId=\"\">\n            <Form.Label>Piso/Apto</Form.Label>\n            <Form.Control value={this.state.address.apto} name=\"address.apto\" onChange={this.handleChange} type=\"text\" placeholder=\"P6 D1\" />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n          <Form.Group md=\"6\" as={Col} controlId=\"formGridaddress1\">\n            <Form.Label>Localidad</Form.Label>\n            <Form.Control value={this.state.address.location} name=\"address.location\" onChange={this.handleChange} placeholder=\"Belgrano\" />\n          </Form.Group>\n\n          <Form.Group md=\"6\" as={Col} controlId=\"formGridaddress2\">\n            <Form.Label>Ciudad</Form.Label>\n            <Form.Control value={this.state.address.city} name=\"address.city\" onChange={this.handleChange} placeholder=\"CABA\" />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row>\n          <Form.Group md=\"4\" as={Col} controlId=\"personal\">\n            <Form.Label>Estatus</Form.Label>\n            <Form.Control value={this.state.status} name=\"status\" onChange={this.handleChange} placeholder=\"\" />\n          </Form.Group>\n        </Form.Row>\n        <Button variant=\"primary\" type=\"submit\" disabled={!validation.submit}>\n          Submit\n        </Button>\n        <Button className=\"ml-1\" variant=\"secondary\" onClick={this.props.toggle}>\n          Cancel\n        </Button>\n      </Form>\n    );\n  }\n\n}\n","import React, { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport AddClient from './AddClient';\n\nfunction AddClientModal(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () =>\n  {\n    setShow(false);\n  }\n  const handleShow = () => {\n    setShow(true);\n  }\n\n  return (\n    <>\n      <Button  variant=\"primary\" onClick={handleShow} hidden={props.hideEditButton} >\n        {props.title}\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AddClient\n            action={props.action}\n            client={props.client}\n            reload={props.reload}\n            toggle={handleClose}\n            hidden={props.hideEditButton}\n          />\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddClientModal;\n","import React, { Component } from 'react';\nimport { Table, Button, Form, InputGroup } from 'react-bootstrap';\nimport AddClientModal from './AddClientModal';\nimport { Link } from 'react-router-dom';\n\nexport default class AllClients extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      clients: []\n    };\n    this.fetchClients = this.fetchClients.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchClients();\n  }\n\n  deleteClient(client_id, service_id, what) {\n    if (window.confirm('Seguro quieres eliminar este cliente?')) {\n      fetch( `/clients/${client_id}`, {\n        method: 'DELETE',\n        body: JSON.stringify({ client_id, service_id, what }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => console.log('Holaaa'))\n        .then(data => console.log(data))\n        .catch(err => console.error(err))\n      this.fetchClients();\n    }\n  }\n\n  fetchClients() {\n    fetch(window.location.pathname)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ clients: data });\n      })\n      .catch(err => console.error(err));\n  }\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <Form inline style={{position: 'absolute', right: 90, top: 8}}  >\n          <InputGroup>\n            <InputGroup.Prepend>\n              <Form.Control as=\"select\" onChange={(e) => this.setState({drop: e.target.value})} >\n                <option>Abonado</option>\n                <option>Estatus</option>\n              </Form.Control>\n            </InputGroup.Prepend>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Search\"\n              onChange={this.handleSearchChange}\n              value={this.state.search}\n              className=\"mr-sm-2\" />\n          </InputGroup>\n          <Button\n            type=\"submit\"\n            variant=\"outline-success\"\n            onClick={this.filterTable}>Search</Button>\n        </Form>\n        <Table size=\"sm\" variant=\"dark\" striped bordered hover >\n          <thead>\n            <tr>\n              <th onClick={() => console.log(this.state)}>Abonado</th>\n              <th>Nombre</th>\n              <th>Servicios</th>\n              <th>PM</th>\n              <th>Implementador</th>\n              <th>Estatus</th>\n              <th>Del</th>\n              <th>Edit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.clients.map(client => {\n\n              // let service_list = []\n              // if (client.services.length > 0) {\n              //     service_list = client.services.map(service => {\n              //         return (<div key={service._id}>{service.service} - {service.plan}</div>);\n              //     })\n              // }\n              if (client.services.length > 0) {\n\n                return(\n                client.services.map( service => {\n                  if (client.status === 'Implementacion') {\n                    return (\n                      <tr key={service._id} hidden={false} >\n                        <td>\n                          <Link to={`/clients/client/${client.abonado}`}>\n                            {client.abonado}\n                          </Link>\n                        </td>\n                        <td>{client.name}</td>\n                        <td>{service.service} - {service.plan}</td>\n                        <td>{service.pm}</td>\n                        <td>{service.im}</td>\n                        <td>{service.status}</td>\n                        <td  ><Button variant=\"danger\" onClick={() => this.deleteClient(client._id, service._id, 'service')} >X </Button> </td>\n                        <td ><AddClientModal title=\"Editar\" action=\"edit\" client={client} reload={this.fetchClients} /></td>\n                      </tr>\n                    )\n                  } else {\n                    return (\n                      < tr key={client._id}  >\n                      <td>\n                        <Link to={`/clients/client/${client.abonado}`}>\n                          {client.abonado}\n                        </Link>\n                      </td>\n                      <td>{client.name}</td>\n                      <td  colSpan=\"4\" > No posee servicios en implementacion</td>\n                      <td  ><Button variant=\"danger\" onClick={() => this.deleteClient(client._id)} >X </Button> </td>\n                      <td ><AddClientModal title=\"Editar\" action=\"edit\" client={client} reload={this.fetchClients} /></td>\n                      </tr>\n                    )\n                  }\n                })\n                )\n              } else {\n                return (\n                  < tr key={client._id}  >\n                  <td>\n                    <Link to={`/clients/client/${client.abonado}`}>\n                      {client.abonado}\n                    </Link>\n                  </td>\n                  <td>{client.name}</td>\n                  <td  colSpan=\"4\" > No posee servicios en implementacion</td>\n                  <td  ><Button variant=\"danger\" onClick={() => this.deleteClient(client._id)} >X </Button> </td>\n                  <td ><AddClientModal title=\"Editar\" action=\"edit\" client={client} reload={this.fetchClients} /></td>\n                  </tr>\n                )\n              }\n            })}\n          </tbody>\n        </Table>\n        <AddClientModal title=\"Agregar\" reload={this.fetchClients} action=\"Agregar\" />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n    render() {\n        return (\n            <h1>Here goes main page</h1>\n        )\n    }\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { ADIConfigTemplate } from './testVariables';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst templates = {\n    ADIFO: ADIConfigTemplate,\n    L2VPN: ADIConfigTemplate\n}\n\nfunction CreateConfigModal(props) {\n\n    const [show, setShow] = useState(false);\n    const [config, setConfig] = useState('Hola');\n    const [linkhref, setLinkhref] = useState('None');\n    const [copied, setCopied] = useState(false);\n\n    const handleClick = () => {\n        // const output = ADIConfigTemplate(props);\n        const output = templates[props.template](props);\n        setConfig(output)\n        setLinkhref(makeTextFile(output))\n        setShow(true);\n    }\n\n    const handleClose = () => {\n        setShow(false);\n    }\n\n    const makeTextFile = (text) => {\n\n        var data = new Blob([text], { type: 'text/plain' });\n\n        return window.URL.createObjectURL(data);\n    }\n\n    return (\n        <>\n            <Button variant=\"secondary\" onClick={handleClick} >\n            Template\n        </Button>\n\n            <Modal show={show} onHide={handleClose}  scrollable xl >\n                <Modal.Header closeButton>\n                    <Modal.Title>{ props.abonado } - { props.clientName }</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {config}\n                </Modal.Body>\n                <Modal.Footer>\n                    <b hidden={!copied} className=\"mr-8\" >Copiado al portapapeles!</b>\n                    <CopyToClipboard onCopy={() => setCopied(true)} text={config} >\n                            <Button\n                                variant=\"info\"\n                                >\n                                Copiar\n                            </Button>\n                    </CopyToClipboard>\n                    <a href={linkhref} download={`${props.abonado}-${props.clientName}.txt`} > Download </a>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default CreateConfigModal;\n","import React, { useState }from 'react';\nimport { Badge, Button, Card, Accordion, Row, Col } from 'react-bootstrap';\nimport CreateConfigModal from './CreateConfigModal';\n\nconst AccordionToggle = (props) => {\n  const  [expanded, setExpanded] = useState(false);\n\n  return (\n    <Accordion.Toggle useAnchor={true} as={Card.Header} eventKey={props.idx} onClick={() => setExpanded(!expanded)}>\n      <Row className=\"d-flex justify-content-end\" >\n        {expanded ? '-' : '+' }\n        <Col  className=\" text-center\" >\n          <b className=\"mr-2\">{`${props.service.service} - ${props.service.plan}`}</b>\n          {props.service.medium === 'CO' ? <Badge  variant=\"primary\">{props.service.medium}</Badge> : <Badge variant=\"warning\">{props.service.medium}</Badge>}\n        </Col><b className=\"text-muted\">|</b>\n        <Col  className=\" text-center\" >\n          <b>PM:</b> {props.service.pm}\n        </Col><b className=\"text-muted\">|</b>\n        <Col className=\" text-center\" >\n          <b>IM:</b> {props.service.im}\n        </Col><b className=\"text-muted\">|</b>\n        <Col className=\" text-center\" >\n          <b>Status:</b> <Badge variant=\"success\">{props.service.status}</Badge>\n        </Col>\n      </Row>\n    </Accordion.Toggle>\n  )\n}\n\nfunction RenderService(props) {\n  if (props.service.service === 'ADI') {\n    if (props.service.medium === \"FO\") {\n      return (\n        <Card>\n          <AccordionToggle {...props} />\n          <Accordion.Collapse eventKey={props.idx}>\n            <Card.Body >\n              <Row>\n                <Col>\n                  <Card.Title> Datos </Card.Title>\n                  <div> <b>Servicio: </b>{` ${props.service.service} - ${props.service.plan} Mbps`} </div>\n                  <div> <b>Tecnología: </b> <Badge variant=\"warning\"> {` ${props.service.medium}`} </Badge> </div>\n                  <div> <b>Equipo: </b>  {props.service.device}</div>\n                  <div> <b>Interfaz: </b> {props.service.interface} </div>\n                </Col>\n                <Col>\n                  <Card.Title> Direccionamiento </Card.Title>\n                  <div> <b>Red: </b>{props.service.red} </div>\n                  <div> <b>IP: </b>{props.service.ip} </div>\n                  <div> <b>DG: </b>{props.service.dg} </div>\n                  <div> <b>Mask: </b>{props.service.mask} </div>\n                  <div> <b>VLAN: </b>{props.service.vlan} </div>\n                </Col>\n                <Col>\n                  <Card.Title> Monitoria </Card.Title>\n                  <div> <b>IP: </b>{props.service.ip_mon} </div>\n                  <div> <b>DG: </b>{props.service.dg_mon} </div>\n                  <div> <b>Mask: </b>{props.service.mask_mon} </div>\n                  <div> <b>VLAN: </b> {props.service.vlan_mon} </div>\n                </Col>\n                <Col>\n                  <Card.Title>Patcheo</Card.Title>\n                  <div> <b>Hub: </b>{props.service.hub} {props.service.obra ? `/${props.service.obra}` : \"\"}</div>\n                  <div> <b>Patcheo: </b>{props.service.rack} - {props.service.patchera} - {props.service.position} </div>\n                  <div> <b>Switch: </b>{props.service.nexus} </div>\n                  <div> <b>Port: </b>{props.service.nexus_port} </div>\n                  <div> <b>Dist: </b>{props.service.dist ? `${props.service.dist} mts` : \"\"} </div>\n                  <div> <b>Att: </b>{props.service.att ? `${props.service.att} dB` : \"\"} </div>\n                </Col>\n              </Row>\n\n              <br></br>\n              <Button onClick={() => props.deleteService(props.id)} variant='danger'> Eliminar </Button>\n              {' '}\n              {props.wrapped()}\n              {' '}\n              <CreateConfigModal {...props } template='ADIFO' />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      )\n\n    } else if (props.service.medium === \"CO\") {\n      return (\n        <Card>\n          <AccordionToggle {...props} />\n          <Accordion.Collapse eventKey={props.idx}>\n            <Card.Body >\n              <Row >\n                <Col md={4} sm={12} className=\"mx-auto\" >\n                  <Card.Title> Datos </Card.Title>\n                  <div> <b>Servicio: </b>{` ${props.service.service} - ${props.service.plan} Mbps`} </div>\n                  <div> <b>Tecnología: </b> <Badge variant=\"primary\"> {` ${props.service.medium}`} </Badge> </div>\n                  <div> <b>HUB: </b> {props.service.hub} </div>\n                  <div> <b>CMTS: </b> {props.service.cmts} </div>\n                  <div> <b>MAC: </b>  {props.service.mac} </div>\n                </Col>\n                <Col md={4} sm={12} className=\"mx-auto\" >\n                  <Card.Title> Direccionamiento </Card.Title>\n                  <div> <b>Red: </b>{props.service.red} </div>\n                  <div> <b>IP: </b>{props.service.ip} </div>\n                  <div> <b>DG: </b>{props.service.dg} </div>\n                  <div> <b>Mask: </b>{props.service.mask} </div>\n                  <div> <b>VLAN: </b> {props.service.vlan} </div>\n                </Col>\n              </Row>\n              <br ></br>\n              <Button onClick={() => props.deleteService(props.id)} variant='danger'> Eliminar </Button>\n              {' '}\n              {props.wrapped()}\n              {' '}\n              <CreateConfigModal {...props } template='ADICO' />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      )\n    }\n  } else if (props.service.service === 'L2VPN') {\n    if (props.service.medium === \"FO\") {\n      return (\n        <Card>\n          <AccordionToggle {...props} />\n          <Accordion.Collapse eventKey={props.idx}>\n            <Card.Body>\n              <Row>\n                <Col>\n                  <Card.Title>Datos</Card.Title>\n                  <div> <b>Servicio: </b>{` ${props.service.service} - ${props.service.plan} Mbps`} </div>\n                  <div> <b>Tecnología: </b> <Badge variant=\"warning\"> {` ${props.service.medium}`} </Badge> </div>\n                  <div> <b>Equipo: </b>  {props.service.device}</div>\n                  <div> <b>Interfaz: </b> {props.service.interface} </div>\n                </Col>\n                <Col>\n                  <Card.Title>TLS</Card.Title>\n                  <div> <b>Tipo: </b> {` ${props.service.mode}`} </div>\n                  <div>\n                    <b>Hub: </b> <Badge variant=\"info\" className=\"mx-1\" > {props.service.sites.hub}</Badge>\n                  </div>\n                  <div>\n                    <b>Spokes: </b>{props.service.sites.spokes ?\n                    props.service.sites.spokes.split(',').map(spoke => <Badge variant=\"secondary\" className=\"mx-1\">{spoke}</Badge>): ''}\n                  </div>\n                  <div> <b>VLAN: </b>{props.service.vlan} </div>\n                </Col>\n                <Col>\n                  <Card.Title>Monitoria</Card.Title>\n                  <div> <b>IP: </b>{props.service.ip_mon} </div>\n                  <div> <b>DG: </b>{props.service.dg_mon} </div>\n                  <div> <b>Mask: </b>{props.service.mask_mon} </div>\n                  <div> <b>VLAN: </b> {props.service.vlan_mon} </div>\n                </Col>\n                <Col>\n                  <Card.Title>Patcheo</Card.Title>\n                  <div> <b>Hub: </b>{props.service.hub} {props.service.obra ? `/ ${props.service.obra}` : \"\"}</div>\n                  <div> <b>Patcheo: </b>{props.service.rack} - {props.service.patchera} - {props.service.position} </div>\n                  <div> <b>Switch: </b>{props.service.nexus} </div>\n                  <div> <b>Port: </b>{props.service.nexus_port} </div>\n                  <div> <b>Dist: </b>{props.service.dist ? `${props.service.dist} mts` : \"\"} </div>\n                  <div> <b>Att: </b>{props.service.att ? `${props.service.att} dB` : \"\"} </div>\n                </Col>\n              </Row>\n              <br></br>\n              <Button onClick={() => props.deleteService(props.id)} variant='danger'> Eliminar </Button>\n              {' '}\n              {props.wrapped()}\n              {' '}\n              <CreateConfigModal { ...props } template='L2VPN' />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        )\n\n        } else if (props.service.medium === \"CO\") {\n          return (\n            <Card>\n              <AccordionToggle {...props} />\n              <Accordion.Collapse eventKey={props.idx}>\n                <Card.Body>\n                  <Row>\n                    <Col md={4} className=\"mx-auto\" >\n                      <Card.Title> Datos </Card.Title>\n                      <div> <b>Servicio: </b>{` ${props.service.service} - ${props.service.plan} Mbps`} </div>\n                      <div> <b>Tecnología: </b> <Badge variant=\"primary\"> {` ${props.service.medium}`} </Badge> </div>\n                      <div> <b>HUB: </b> {props.service.hub} </div>\n                      <div> <b>CMTS: </b> {props.service.cmts} </div>\n                      <div> <b>MAC: </b>  {props.service.mac} </div>\n                    </Col>\n                    <Col md={4} className=\"mx-auto\" >\n                      <Card.Title>TLS</Card.Title>\n                      <div> <b>Tipo: </b> {` ${props.service.mode}`} </div>\n                      <div>\n                        <b>Contra: </b>{props.service.sites ?\n                        props.service.sites.split(',').map(site => <Badge variant=\"secondary\" className=\"mx-1\">{site}</Badge>): ''}\n                      </div>\n                      <div> <b>VLAN: </b>{props.service.vlan} </div>\n                    </Col>\n                  </Row>\n                  <br></br>\n                  <Button onClick={() => props.deleteService(props.id)} variant='danger'> Eliminar </Button>\n                  {' '}\n                  {props.wrapped()}\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          )\n        }\n  } else if (props.service.service === 'L3VPN'){\n    if (props.service.medium === \"FO\") {\n      return (\n        <Card>\n          <AccordionToggle {...props} />\n          <Accordion.Collapse eventKey={props.idx}>\n            <Card.Body >\n              <Row>\n                <Col>\n                  <Card.Title> Datos </Card.Title>\n                  <div> <b>Servicio: </b>{` ${props.service.service} - ${props.service.plan} Mbps`} </div>\n                  <div> <b>Tecnología: </b> <Badge variant=\"warning\"> {` ${props.service.medium}`} </Badge> </div>\n                  <div> <b>Switch: </b>  {props.service.device}</div>\n                  <div> <b>Interfaz: </b> {props.service.interface} </div>\n                  <div> <b>Router: </b>  {props.service.device_router}</div>\n                  <div> <b>Interfaz: </b> {props.service.interface_router} </div>\n                </Col>\n                <Col>\n                  <Card.Title>VPN</Card.Title>\n                  <div> <b>Tipo: </b> {` ${props.service.mode}`} </div>\n                  <div> <b>Contra: </b>{props.service.sites.split(',').map(site => <Badge variant=\"secondary\" className=\"mx-1\">{site}</Badge>)} </div>\n                  <div> <b>VLAN: </b>{props.service.vlan} </div>\n                </Col>\n                <Col>\n                  <Card.Title> Direccionamiento </Card.Title>\n                  <div>WAN</div>\n                  <div> <b>Red: </b>{props.service.red} </div>\n                  <div> <b>IP: </b>{props.service.ip} </div>\n                  <div> <b>DG: </b>{props.service.dg} </div>\n                  <div> <b>Mask: </b>{props.service.mask} </div>\n                  <div>LAN</div>\n                  <div> <b>Red: </b>{props.service.lan_red} </div>\n                  <div> <b>IP: </b>{props.service.lan_ip} </div>\n                  <div> <b>DG: </b>{props.service.lan_dg} </div>\n                  <div> <b>Mask: </b>{props.service.lan_mask} </div>\n                </Col>\n                <Col>\n                  <Card.Title>Monitoria</Card.Title>\n                  <div> <b>Switch: </b>{props.service.ip_mon} </div>\n                  <div> <b>Router: </b>{props.service.ip_mon_router} </div>\n                  <div> <b>DG: </b>{props.service.dg_mon} </div>\n                  <div> <b>Mask: </b>{props.service.mask_mon} </div>\n                  <div> <b>VLAN: </b> {props.service.vlan_mon} </div>\n                </Col>\n                <Col>\n                  <Card.Title>Patcheo</Card.Title>\n                  <div> <b>Hub: </b>{props.service.hub} {props.service.obra ? `/${props.service.obra}` : \"\"}</div>\n                  <div> <b>Patcheo: </b>{props.service.rack} - {props.service.patchera} - {props.service.position} </div>\n                  <div> <b>Switch: </b>{props.service.nexus} </div>\n                  <div> <b>Port: </b>{props.service.nexus_port} </div>\n                  <div> <b>Dist: </b>{props.service.dist ? `${props.service.dist} mts` : \"\"} </div>\n                  <div> <b>Att: </b>{props.service.att ? `${props.service.att} dB` : \"\"} </div>\n                </Col>\n              </Row>\n\n              <br></br>\n              <Button onClick={() => props.deleteService(props.id)} variant='danger'> Eliminar </Button>\n              {' '}\n              {props.wrapped()}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      )\n\n    } else if (props.service.medium === \"CO\") {\n      return (\n        <Card>\n          <AccordionToggle {...props} />\n          <Accordion.Collapse eventKey={props.idx}>\n            <Card.Body >\n              <Row >\n                <Col md={4} sm={12} className=\"mx-auto\" >\n                  <Card.Title> Datos </Card.Title>\n                  <div> <b>Servicio: </b>{` ${props.service.service} - ${props.service.plan} Mbps`} </div>\n                  <div> <b>Tecnología: </b> <Badge variant=\"primary\"> {` ${props.service.medium}`} </Badge> </div>\n                  <div> <b>HUB: </b> {props.service.hub} </div>\n                  <div> <b>CMTS: </b> {props.service.cmts} </div>\n                  <div> <b>MAC: </b>  {props.service.mac} </div>\n                </Col>\n                <Col md={4} sm={12} className=\"mx-auto\" >\n                  <Card.Title> Direccionamiento </Card.Title>\n                  <div> <b>Red: </b>{props.service.red} </div>\n                  <div> <b>IP: </b>{props.service.ip} </div>\n                  <div> <b>DG: </b>{props.service.dg} </div>\n                  <div> <b>Mask: </b>{props.service.mask} </div>\n                  <div> <b>VLAN: </b> {props.service.vlan} </div>\n                </Col>\n              </Row>\n              <br ></br>\n              <Button onClick={() => props.deleteService(props.id)} variant='danger'> Eliminar </Button>\n              {' '}\n              {props.wrapped()}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        )\n    }\n    } else if (props.service.service === 'TTT'){\n      if (props.service.medium === \"FO\") {\n        return (\n          <Card>\n            <AccordionToggle {...props} />\n            <Accordion.Collapse eventKey={props.idx}>\n              <Card.Body >\n                <Row>\n                  <Col>\n                    <Card.Title> Datos </Card.Title>\n                    <div> <b>Servicio: </b>{` ${props.service.service} - ${props.service.plan} Mbps`} </div>\n                    <div> <b>Tecnología: </b> <Badge variant=\"warning\"> {` ${props.service.medium}`} </Badge> </div>\n                    <div> <b>Equipo: </b>  {props.service.device}</div>\n                    <div> <b>Interfaz: </b> {props.service.interface} </div>\n                    <div> <b>Cabecera: </b> {props.service.nhead} </div>\n                    <div> <b>Cola: </b> {props.service.ntale} </div>\n                  </Col>\n                  <Col>\n                    <Card.Title> Direccionamiento </Card.Title>\n                    <div> <b>Red: </b>{props.service.red} </div>\n                    <div> <b>IP: </b>{props.service.ip} </div>\n                    <div> <b>DG: </b>{props.service.dg} </div>\n                    <div> <b>Mask: </b>{props.service.mask} </div>\n                    <div> <b>VLAN: </b>{props.service.vlan} </div>\n                  </Col>\n                  <Col>\n                    <Card.Title> Monitoria </Card.Title>\n                    <div> <b>IP: </b>{props.service.ip_mon} </div>\n                    <div> <b>DG: </b>{props.service.dg_mon} </div>\n                    <div> <b>Mask: </b>{props.service.mask_mon} </div>\n                    <div> <b>VLAN: </b> {props.service.vlan_mon} </div>\n                  </Col>\n                  <Col>\n                    <Card.Title>Patcheo</Card.Title>\n                    <div> <b>Hub: </b>{props.service.hub} {props.service.obra ? `/${props.service.obra}` : \"\"}</div>\n                    <div> <b>Patcheo: </b>{props.service.rack} - {props.service.patchera} - {props.service.position} </div>\n                    <div> <b>Switch: </b>{props.service.nexus} </div>\n                    <div> <b>Port: </b>{props.service.nexus_port} </div>\n                    <div> <b>Dist: </b>{props.service.dist ? `${props.service.dist} mts` : \"\"} </div>\n                    <div> <b>Att: </b>{props.service.att ? `${props.service.att} dB` : \"\"} </div>\n                  </Col>\n                </Row>\n\n                <br></br>\n                <Button onClick={() => props.deleteService(props.id)} variant='danger'> Eliminar </Button>\n                {' '}\n                {props.wrapped()}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        )\n\n      } else if (props.service.medium === \"CO\") {\n        return (\n          <Card>\n            <AccordionToggle {...props} />\n            <Accordion.Collapse eventKey={props.idx}>\n              <Card.Body >\n                <Row >\n                  <Col md={3} sm={12} className=\"mx-auto\" >\n                    <Card.Title> Datos </Card.Title>\n                    <div> <b>Servicio: </b>{` ${props.service.service} - ${props.service.plan} Mbps`} </div>\n                    <div> <b>Tecnología: </b> <Badge variant=\"primary\"> {` ${props.service.medium}`} </Badge> </div>\n                    <div> <b>Cabecera: </b>{props.service.nhead} </div>\n                    <div> <b>Cola: </b>{props.service.ntale} </div>\n                  </Col>\n                  <Col md={3} sm={12} className=\"mx-auto\" >\n                    <Card.Title> Direccionamiento </Card.Title>\n                    <div> <b>Red: </b>{props.service.red} </div>\n                    <div> <b>IP: </b>{props.service.ip} </div>\n                    <div> <b>DG: </b>{props.service.dg} </div>\n                    <div> <b>Mask: </b>{props.service.mask} </div>\n                    <div> <b>VLAN: </b> {props.service.vlan} </div>\n                  </Col>\n                  <Col md={3} sm={12} className=\"mx-auto\" >\n                    <Card.Title> Equipamiento </Card.Title>\n                    <div> <b>HUB: </b> {props.service.hub} </div>\n                    <div> <b>CMTS: </b> {props.service.cmts} </div>\n                    <div> <b>MAC: </b>  {props.service.mac} </div>\n                  </Col>\n                </Row>\n                <br ></br>\n                <Button onClick={() => props.deleteService(props.id)} variant='danger'> Eliminar </Button>\n                {' '}\n                {props.wrapped()}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          )\n      }\n    }\n}\n\nfunction RenderHardware(props) {\n\n  return (\n    <Card>\n      <Accordion.Toggle as={Card.Header} eventKey={props.idx}>\n        <Row className=\"d-flex justify-content-end\" >\n          <Col  className=\" text-center\" >\n            <b className=\"mr-2\"></b>\n            {props.device.device}\n          </Col><b className=\"text-muted\">|</b>\n          <Col  className=\" text-center\" >\n            <b className=\"mr-2\"></b>\n            {props.device.model}\n          </Col><b className=\"text-muted\">|</b>\n          <Col  className=\" text-center\" >\n            <b className=\"mr-2\"></b>\n            {props.device.serial}\n          </Col>\n        </Row>\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey={props.idx}>\n        <Card.Body>\n          <Card.Title>\n            <Row>\n              <Col>Detalles</Col>\n            </Row>\n          </Card.Title>\n          <Row>\n            <Col><b>Serial: </b>{props.device.serial}</Col>\n            <Col><b>Descripcion: </b>{props.device.description}</Col>\n          </Row>\n          <br></br>\n          <Button onClick={() => props.deleteDevice(props.id)} variant='danger'> Eliminar </Button>\n          {' '}\n          {props.wrapped()}\n        </Card.Body>\n\n      </Accordion.Collapse>\n    </Card>\n    )\n}\n\nexport { RenderService, RenderHardware };\n","import React, { Component } from 'react';\nimport { Button, Form, Col, Tabs, Tab } from 'react-bootstrap';\nimport { serviceBlankState } from './testVariables';\n\nconst ServicioCM = (props) => (\n\n  <React.Fragment>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>{props.modifier ? props.modifier.plan : 'Velocidad'}</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.plan}\n          name=\"plan\"\n          onChange={props.handleChange}\n          type=\"string\"\n          placeholder={props.modifier ? props.modifier.placeholder : 'en Mbps'}\n          required\n        />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>VLAN</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.vlan}\n          name=\"vlan\"\n          onChange={props.handleChange}\n          type=\"text\"\n          placeholder=\"VLAN del Servicio\"\n        />\n      </Form.Group>\n    </Form.Row>\n\n    {props.children}\n\n    <Form.Row>\n      <Form.Group md={3} as={Col} controlId=\"\">\n        <Form.Label>HUB</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.hub}\n          name=\"hub\"\n          onChange={props.handleChange}\n          placeholder=\"Modelo de CM\"\n        />\n      </Form.Group>\n      <Form.Group md={4} as={Col} controlId=\"\">\n        <Form.Label>CMTS</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.cmts}\n          name=\"cmts\"\n          onChange={props.handleChange}\n          placeholder=\"\"\n        />\n      </Form.Group>\n      <Form.Group md={5} as={Col} controlId=\"\">\n        <Form.Label>MAC</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.mac}\n          name=\"mac\"\n          onChange={props.handleChange}\n          placeholder=\"0000.0055.5555\"\n        />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>IM</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.im}\n          name=\"im\"\n          onChange={props.handleChange}\n          placeholder=\"\"\n        />\n      </Form.Group><Form.Group as={Col} controlId=\"\">\n        <Form.Label>PM</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.pm}\n          name=\"pm\"\n          onChange={props.handleChange}\n          placeholder=\"\"\n        />\n      </Form.Group><Form.Group as={Col} controlId=\"\">\n        <Form.Label>Status</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.status}\n          name=\"status\"\n          onChange={props.handleChange}\n          placeholder=\"\"\n        />\n      </Form.Group>\n    </Form.Row>\n\n  </React.Fragment>\n)\n\nconst ServicioFO = props => (\n  <React.Fragment>\n    <br></br>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>{props.modifier ? props.modifier.plan : 'Velocidad'}</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.plan}\n          name=\"plan\"\n          onChange={props.handleChange}\n          type=\"text\"\n          placeholder={props.modifier ? props.modifier.placeholder : 'en Mbps'}\n          required\n        />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>HUB</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.hub}\n          name=\"hub\"\n          onChange={props.handleChange}\n          placeholder=\"HUB\" >\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>Obra</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.obra}\n          name=\"obra\"\n          onChange={props.handleChange}\n          placeholder=\"XXFO\" >\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    {props.children}\n\n    {props.state.service === 'L3VPN' ?\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"\">\n          <Form.Label>Tipo</Form.Label>\n          <Form.Control\n            size=\"sm\"\n            value={props.state.mode}\n            name=\"mode\"\n            onChange={props.handleChange}\n            as=\"select\"\n            placeholder=\"en Mbps\">\n            <option>...</option>\n            <option>Punto a punto</option>\n            <option>Punto Multipunto</option>\n            <option>Multipunto</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"\">\n          <Form.Label>Contra</Form.Label>\n          <Form.Control\n            size=\"sm\"\n            value={props.state.sites}\n            name=\"sites\"\n            onChange={props.handleChange}\n            type=\"text\"\n            placeholder=\"\"\n          />\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"\">\n          <Form.Label>VLAN</Form.Label>\n          <Form.Control\n            size=\"sm\"\n            value={props.state.vlan}\n            name=\"vlan\"\n            onChange={props.handleChange}\n            type=\"text\"\n            placeholder=\"VLAN del Servicio\"\n          />\n        </Form.Group>\n      </Form.Row> :\n      <Form.Row>\n        <Form.Group as={Col} controlId=\"\">\n          <Form.Label>Equipo</Form.Label>\n          <Form.Control\n            size=\"sm\"\n            value={props.state.device}\n            name=\"device\"\n            onChange={props.handleChange}\n            as=\"select\"\n            placeholder=\"\" >\n            <option>...</option>\n            {props.hardware.length > 0\n              ? props.hardware.map(device => <option>{device.device} {device.model}</option>)\n              : <option>No hay equipos asociados </option>}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"\">\n          <Form.Label>Interfaz</Form.Label>\n          <Form.Control\n            size=\"sm\"\n            value={props.state.interface}\n            name=\"interface\"\n            onChange={props.handleChange}\n            type=\"text\"\n            placeholder=\"Gi1\"\n          />\n        </Form.Group>\n        <Form.Group as={Col} controlId=\"\">\n          <Form.Label>VLAN</Form.Label>\n          <Form.Control\n            size=\"sm\"\n            value={props.state.vlan}\n            name=\"vlan\"\n            onChange={props.handleChange}\n            type=\"text\"\n            placeholder=\"VLAN del Servicio\"\n          />\n        </Form.Group>\n      </Form.Row>\n\n    }\n\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>IM</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.im}\n          name=\"im\"\n          onChange={props.handleChange}\n          placeholder=\"\"\n        />\n      </Form.Group><Form.Group as={Col} controlId=\"\">\n        <Form.Label>PM</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.pm}\n          name=\"pm\"\n          onChange={props.handleChange}\n          placeholder=\"\"\n        />\n      </Form.Group><Form.Group as={Col} controlId=\"\">\n        <Form.Label>Status</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.status}\n          name=\"status\"\n          onChange={props.handleChange}\n          placeholder=\"\"\n        />\n      </Form.Group>\n    </Form.Row>\n\n  </React.Fragment>\n)\n\nconst DireccionamientoFO = (props) => (\n  <>\n    <br></br>\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>Red Wan</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.red}\n          name=\"red\"\n          onChange={props.handleChange}\n          type=\"text\"\n          placeholder=\"10.0.0.0/30\"\n        />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>Mascara</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.mask}\n          name=\"mask\"\n          onChange={props.handleChange}\n          type=\"text\"\n          placeholder=\"255.255.255.0\"\n        />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>Wan IP</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.ip}\n          name=\"ip\"\n          onChange={props.handleChange}\n          type=\"text\"\n          placeholder=\"\"\n        />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>Wan DG</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.dg}\n          name=\"dg\"\n          onChange={props.handleChange}\n          type=\"text\"\n          placeholder=\"IP del PE\"\n        />\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>IP Monitoria</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.ip_mon}\n          name=\"ip_mon\"\n          onChange={props.handleChange}\n          type=\"text\"\n          placeholder=\"IP equipo cliente\"\n        />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>DG Monitoria</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.dg_mon}\n          name=\"dg_mon\"\n          onChange={props.handleChange}\n          type=\"text\"\n          placeholder=\"IP del PE\"\n        />\n      </Form.Group>\n      <Form.Group as={Col} controlId=\"\">\n        <Form.Label>Máscara</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.mask_mon}\n          name=\"mask_mon\"\n          onChange={props.handleChange}\n          type=\"text\"\n          placeholder=\"IP del PE\"\n        />\n      </Form.Group>\n    </Form.Row>\n  </>\n)\n\nconst Patcheo = (props) => (\n  <>\n    <br></br>\n    <Form.Row>\n      <Form.Group as={Col} >\n        <Form.Label>Rack</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.rack}\n          name=\"rack\"\n          onChange={props.handleChange}\n          placeholder=\"Rack/FDF\" >\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} >\n        <Form.Label>Patchera</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.patchera}\n          name=\"patchera\"\n          onChange={props.handleChange}\n          placeholder=\"Patchera\" >\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} >\n        <Form.Label>Posición</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.position}\n          name=\"position\"\n          onChange={props.handleChange}\n          placeholder=\"Posicion\" >\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n\n    <Form.Row>\n      <Form.Group as={Col} >\n        <Form.Label>Distancia</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.dist}\n          name=\"dist\"\n          onChange={props.handleChange}\n          placeholder=\"en mts\" >\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} >\n        <Form.Label>Att</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.att}\n          name=\"att\"\n          onChange={props.handleChange}\n          placeholder=\"en dB\" >\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} >\n        <Form.Label>Switch</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.nexus}\n          name=\"nexus\"\n          onChange={props.handleChange}\n          placeholder=\"Switch en HUB\" >\n        </Form.Control>\n      </Form.Group>\n      <Form.Group as={Col} >\n        <Form.Label>Puerto</Form.Label>\n        <Form.Control\n          size=\"sm\"\n          value={props.state.nexus_port}\n          name=\"nexus_port\"\n          onChange={props.handleChange}\n          placeholder=\"Numero de puerto\" >\n        </Form.Control>\n      </Form.Group>\n    </Form.Row>\n  </>\n)\n\n\nclass AddService extends Component {\n\n  constructor(props) {\n    super(props);\n    if (props.action === \"Edit\") {\n      this.state = props.service;\n    } else {\n      this.state = serviceBlankState;\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addService = this.addService.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value, id } = e.target;\n\n    console.log(\"Props\");\n    console.log(this.props);\n    console.log(\"State\");\n    console.log(this.state);\n    if (name === 'mediumRadios') {\n      this.setState({ medium: id });\n    } else if (name.match(/\\./)) {\n      const name_key = name.match(/(\\D+)\\./)[1];\n      const name_value = name.match(/\\.(\\D+)/)[1];\n      this.setState({ [name_key]: { ...this.state[name_key], [name_value]: value } });\n    } else if (name === 'red') {\n      if (value.match(/^\\d{1,3}(\\.\\d{1,3}){3}\\/\\d{2}$/)) {\n        console.log('It matches');\n        var oct123 = value.match(/^\\d{1,3}(\\.\\d{1,3}){2}/)[0];\n        var oct4 = parseInt(value.match(/(\\d{1,3})\\//)[1]);\n        var service_ip = oct123 + '.' + (oct4 + 1).toString();\n        var service_dg = oct123 + '.' + (oct4 + 2).toString();\n        this.setState({\n          red: value,\n          ip: service_ip,\n          dg: service_dg,\n          mask: '255.255.255.252'\n        });\n      } else {\n        this.setState({\n          [name]: value\n        });\n      }\n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n  }\n\n  addService(e) {\n    if (this.props.action === 'Edit') {\n      const idx = this.props.idx;\n      fetch(`/clients/service/edit/${this.props.abonado}`, {\n        method: 'PUT',\n        body: JSON.stringify({ ...this.state, idx }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then((res) => {\n          console.log(res.json());\n          this.props.toggle();\n          this.props.reload();\n        })\n        .then(data => console.log(data))\n      e.preventDefault();\n\n    } else {\n\n      fetch(`/clients/service/${this.props.abonado}`, {\n        method: 'PUT',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(() => {\n          this.props.toggle();\n          this.props.reload();\n        })\n      e.preventDefault();\n    }\n  }\n\n  adi() {\n\n    if (this.state.service === 'ADI') {\n      if (this.state.medium === \"FO\") {\n        return (\n          <Tabs defaultActiveKey=\"service\" >\n\n            <Tab eventKey=\"service\" title=\"Service\" >\n              <ServicioFO state={this.state} hardware={this.props.hardware} handleChange={this.handleChange} />\n            </Tab>\n\n            <Tab eventKey=\"direccionamiento\" title=\"Direccionamiento\" >\n              <DireccionamientoFO state={this.state} handleChange={this.handleChange}\n              />\n            </Tab>\n\n            <Tab eventKey=\"patcheo\" title=\"Patcheo\" >\n              <Patcheo state={this.state} handleChange={this.handleChange} />\n            </Tab>\n\n          </Tabs>\n\n        )\n      } else if (this.state.medium === \"CO\") {\n        return (\n          <ServicioCM state={this.state} handleChange={this.handleChange}>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>Red</Form.Label>\n                <Form.Control size=\"sm\"\n                  value={this.state.red}\n                  name=\"red\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"10.0.0.0/30\"\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>Mascara Servicio</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.mask}\n                  name=\"mask\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"255.255.255.0\"\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>IP Servicio</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.ip}\n                  name=\"ip\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"IP del cliente\"\n                />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>DG Servicio</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.dg}\n                  name=\"dg\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"IP del PE\"\n                />\n              </Form.Group>\n            </Form.Row>\n\n          </ServicioCM>\n\n        )\n      }\n    }\n  }\n\n  l2vpn() {\n    if (this.state.service === 'L2VPN') {\n      if (this.state.medium === \"FO\") {\n        return (\n\n          <Tabs defaultActiveKey=\"service\" >\n\n            <Tab eventKey=\"service\" title=\"Service\" >\n              <ServicioFO state={this.state} hardware={this.props.hardware} handleChange={this.handleChange}>\n                <Form.Row>\n                  <Form.Group as={Col} md={4} controlId=\"\">\n                    <Form.Label>Tipo</Form.Label>\n                    <Form.Control size=\"sm\" value={this.state.mode} name=\"mode\" onChange={this.handleChange} as=\"select\" placeholder=\"en Mbps\">\n                      <option>...</option>\n                      <option>Punto a punto</option>\n                      <option>Punto Multipunto</option>\n                      <option>Multipunto</option>\n                    </Form.Control>\n                  </Form.Group>\n                  {this.state.mode === 'Punto Multipunto'\n                    ?\n                    (<><Form.Group as={Col} md={3} controlId=\"\">\n                      <Form.Label>Concentrador</Form.Label>\n                      <Form.Control size=\"sm\" value={this.state.sites.hub} name=\"sites.hub\" onChange={this.handleChange} type=\"text\" placeholder=\"5551212,5559012\"\n                      />\n                    </Form.Group>\n                      <Form.Group as={Col} md={5} controlId=\"\">\n                        <Form.Label>Spokes</Form.Label>\n                        <Form.Control size=\"sm\" value={this.state.sites.spokes} name=\"sites.spokes\" onChange={this.handleChange} type=\"text\" placeholder=\"5551212,5559012\"\n                        />\n                      </Form.Group></>)\n                    :\n                    <Form.Group as={Col} controlId=\"\">\n                      <Form.Label>Contra</Form.Label>\n                      <Form.Control size=\"sm\" value={this.state.sites.hub} name=\"sites.hub\" onChange={this.handleChange} type=\"text\" placeholder=\"5551212,5559012\"\n                      />\n                    </Form.Group>\n                  }\n                </Form.Row>\n\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"\">\n                    <Form.Label>IP Monitoria</Form.Label>\n                    <Form.Control size=\"sm\" value={this.state.ip_mon} name=\"ip_mon\" onChange={this.handleChange} type=\"text\" placeholder=\"IP equipo cliente\"\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"\">\n                    <Form.Label>Mascara</Form.Label>\n                    <Form.Control size=\"sm\" value={this.state.mask_mon} name=\"mask_mon\" onChange={this.handleChange} type=\"text\" placeholder=\"255.255.255.240\"\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"\">\n                    <Form.Label>DG</Form.Label>\n                    <Form.Control size=\"sm\" value={this.state.dg_mon} name=\"dg_mon\" onChange={this.handleChange} type=\"text\" placeholder=\"IP del PE\"\n                    />\n                  </Form.Group>\n                </Form.Row>\n\n              </ServicioFO>\n            </Tab>\n\n            <Tab eventKey=\"patcheo\" title=\"Patcheo\" >\n              <Patcheo state={this.state} handleChange={this.handleChange} />\n            </Tab>\n\n          </Tabs >\n        )\n      } else if (this.state.medium === \"CO\") {\n\n        return (\n          <ServicioCM state={this.state} handleChange={this.handleChange}>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>Tipo</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.mode}\n                  name=\"mode\"\n                  onChange={this.handleChange}\n                  as=\"select\"\n                  placeholder=\"en Mbps\">\n                  <option>...</option>\n                  <option>Punto a punto</option>\n                  <option>Punto Multipunto</option>\n                  <option>Multipunto</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>Contra</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.sites}\n                  name=\"sites\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"5551212,5559012\"\n                />\n              </Form.Group>\n            </Form.Row>\n\n          </ServicioCM>\n        )\n      }\n    }\n  }\n\n  l3vpn() {\n    if (this.state.service === 'L3VPN') {\n      if (this.state.medium === \"FO\") {\n        return (\n\n          <Tabs defaultActiveKey=\"service\" >\n\n            <Tab eventKey=\"service\" title=\"Service\">\n\n              <ServicioFO state={this.state} hardware={this.props.hardware} handleChange={this.handleChange}>\n              </ServicioFO>\n\n            </Tab>\n\n\n            <Tab eventKey=\"capa2\" title=\"Capa 2\" >\n              <br></br>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Equipo</Form.Label>\n                  <Form.Control size=\"sm\" value={this.state.device} name=\"device\" onChange={this.handleChange} as=\"select\" placeholder=\"\" >\n                    <option>...</option>\n                    {this.props.hardware.length > 0\n                      ? this.props.hardware.map(device => <option>{device.device} {device.model}</option>)\n                      : <option>No hay equipos asociados </option>}\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Interfaz</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.interface}\n                    name=\"interface\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"Gi1\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>IP Monitoria</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.ip_mon}\n                    name=\"ip_mon\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"IP equipo cliente\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Mascara</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.mask_mon}\n                    name=\"mask_mon\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"255.255.255.240\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>DG</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.dg_mon}\n                    name=\"dg_mon\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"IP del PE\"\n                  />\n                </Form.Group>\n              </Form.Row>\n            </Tab>\n\n            <Tab eventKey=\"capa3\" title=\"Capa 3\" >\n              <br></br>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Red Wan</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.red}\n                    name=\"red\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"10.0.0.0/30\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Wan IP</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.ip}\n                    name=\"ip\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Wan DG</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.dg}\n                    name=\"dg\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"IP del PE\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Mascara</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.mask}\n                    name=\"mask\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"255.255.255.0\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Red Lan</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.lan_red}\n                    name=\"lan_red\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Lan IP</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.lan_ip}\n                    name=\"lan_ip\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Lan DG</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.lan_dg}\n                    name=\"lan_dg\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"IP del PE\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Mascara</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.lan_mask}\n                    name=\"lan_mask\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Equipo</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.device_router}\n                    name=\"device_router\"\n                    onChange={this.handleChange}\n                    as=\"select\"\n                    placeholder=\"\" >\n                    <option>...</option>\n                    {this.props.hardware.length > 0\n                      ? this.props.hardware.map(device => <option>{device.device} {device.model}</option>)\n                      : <option>No hay equipos asociados </option>}\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Interfaz</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.interface_router}\n                    name=\"interface_router\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"Gi0/?\"\n                  />\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>IP Monitoria</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.ip_mon_router}\n                    name=\"ip_mon_router\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"IP equipo cliente\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>Mascara</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.mask_mon}\n                    name=\"mask_mon\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"255.255.255.240\"\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"\">\n                  <Form.Label>DG</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    value={this.state.dg_mon}\n                    name=\"dg_mon\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"IP del PE\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n            </Tab>\n          </Tabs >\n        )\n      } else if (this.state.medium === \"CO\") {\n\n        return (\n          <ServicioCM state={this.state} handleChange={this.handleChange}>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>Tipo</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.mode}\n                  name=\"mode\"\n                  onChange={this.handleChange}\n                  as=\"select\"\n                  placeholder=\"en Mbps\">\n                  <option>...</option>\n                  <option>Punto a punto</option>\n                  <option>Punto Multipunto</option>\n                  <option>Multipunto</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>Contra</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.sites}\n                  name=\"sites\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"5551212,5559012\"\n                />\n              </Form.Group>\n            </Form.Row>\n\n          </ServicioCM>\n        )\n      }\n    }\n  }\n\n  ttt() {\n    if (this.state.service === 'TTT') {\n      if (this.state.medium === \"FO\") {\n        return (\n          <Tabs defaultActiveKey=\"service\" >\n            <Tab eventKey=\"service\" title=\"Service\" >\n              <br></br>\n\n              <ServicioFO state={this.state} modifier={{ plan: 'Plan', placeholder: 'Canales/Numeros' }} hardware={this.props.hardware} handleChange={this.handleChange}>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"\">\n                    <Form.Label>Cabecera</Form.Label>\n                    <Form.Control\n                      size=\"sm\"\n                      value={this.state.nhead}\n                      name=\"nhead\"\n                      onChange={this.handleChange}\n                      type=\"string\"\n                      placeholder=\"1er numero\"\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"\">\n                    <Form.Label>Cola</Form.Label>\n                    <Form.Control\n                      size=\"sm\"\n                      value={this.state.ntale}\n                      name=\"ntale\"\n                      onChange={this.handleChange}\n                      type=\"text\"\n                      placeholder=\"Ultimo numero\"\n                    />\n                  </Form.Group>\n                </Form.Row>\n\n              </ServicioFO >\n            </Tab>\n\n            <Tab eventKey=\"direccionamiento\" title=\"Direccionamiento\" >\n              <DireccionamientoFO state={this.state} handleChange={this.handleChange}\n              />\n            </Tab>\n\n            <Tab eventKey=\"patcheo\" title=\"Patcheo\" >\n              <Patcheo state={this.state} handleChange={this.handleChange}\n              />\n            </Tab>\n\n          </Tabs>\n        )\n      } else if (this.state.medium === \"CO\") {\n\n        return (\n          <ServicioCM state={this.state} handleChange={this.handleChange} modifier={{ plan: 'Plan', placeholder: 'Canales/Numeros' }}>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>Cabecera</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.nhead}\n                  name=\"nhead\"\n                  onChange={this.handleChange}\n                  type=\"string\"\n                  placeholder=\"1er numero\"\n                />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>Cola</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.ntale}\n                  name=\"ntale\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"Ultimo numero\"\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>Red</Form.Label>\n                <Form.Control size=\"sm\"\n                  value={this.state.red || \"172.31.\"}\n                  name=\"red\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"172.31.xx.xx/30\"\n                />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>Mascara</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.mask}\n                  name=\"mask\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"255.255.255.0\"\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>IP PBX</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.ip}\n                  name=\"ip\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"IP de central\"\n                />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"\">\n                <Form.Label>DG</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  value={this.state.dg}\n                  name=\"dg\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"IP del PE\"\n                />\n              </Form.Group>\n            </Form.Row>\n          </ServicioCM>\n\n        )\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.addService}>\n        <Form.Row className=\"text-center\">\n          <Form.Group as={Col} controlId=\"formGridState\" >\n            <Form.Label>Servicio</Form.Label>\n            <Form.Control size=\"sm\" name=\"service\" value={this.state.service} onChange={this.handleChange} as=\"select\" required >\n              <option>Selecciona un servicio</option>\n              <option>ADI</option>\n              <option>L2VPN</option>\n              <option>L3VPN</option>\n              <option>TTT</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group as={Col} >\n            <Form.Label >\n              Medio\n            </Form.Label>\n            <div className=\"d-flex justify-content-around\" >\n              <Form.Check\n                type=\"radio\"\n                label=\"CO\"\n                name=\"mediumRadios\"\n                id=\"CO\"\n                onChange={this.handleChange}\n                checked={this.state.medium === 'CO' ? true : false}\n                required\n              />\n              <Form.Check\n                type=\"radio\"\n                label=\"FO\"\n                name=\"mediumRadios\"\n                id=\"FO\"\n                onChange={this.handleChange}\n                checked={this.state.medium === 'FO' ? true : false}\n                required\n              />\n            </div>\n          </Form.Group>\n        </Form.Row>\n        {this.adi()}\n        {this.l2vpn()}\n        {this.l3vpn()}\n        {this.ttt()}\n        <Button variant=\"warning\" type=\"submit\" >\n          Save\n        </Button>\n      </Form>\n    )\n  }\n}\n\nexport default AddService;\n","import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport AddService from './AddService';\n\nfunction AddServiceModal(props) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        setShow(false);\n    }\n    const handleShow = () => {\n        setShow(true);\n    }\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                {props.action}\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.action}</Modal.Title>\n                </Modal.Header>\n                    <Modal.Body>\n                        <AddService\n                            abonado={props.abonado}\n                            action={props.action}\n                            idx={props.idx}\n                            hardware={props.hardware}\n                            reload={props.reload}\n                            service={props.service}\n                            toggle={handleClose} />\n                    </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default AddServiceModal;\n","import React, { Component } from 'react';\nimport { Button, Form, Col } from 'react-bootstrap';\n\nclass AddHardware extends Component {\n    constructor(props) {\n        super(props);\n        if (props.action === \"Edit\") {\n            this.state = props.device;\n        } else {\n            this.state = { device: \"\" };\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.addDevice = this.addDevice.bind(this);\n    }\n\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    addDevice(e) {\n        if (this.props.action === 'Edit') {\n            const idx = this.props.idx;\n            fetch(`/clients/device/edit/${this.props.abonado}`, {\n                method: 'PUT',\n                body: JSON.stringify({ ...this.state, idx }),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(() => {\n                    this.props.toggle();\n                    this.props.reload();\n                })\n            e.preventDefault();\n\n        } else {\n\n            fetch(`/clients/device/${this.props.abonado}`, {\n                method: 'PUT',\n                body: JSON.stringify(this.state),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(() => {\n                    this.props.toggle();\n                    this.props.reload();\n                })\n            e.preventDefault();\n        }\n    }\n\n    render() {\n        return (\n            <Form>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"\">\n                        <Form.Label>Equipo</Form.Label>\n                        <Form.Control size=\"sm\" value={this.state.device} name=\"device\" onChange={this.handleChange} type=\"text\" as=\"select\" placeholder=\"\">\n                            <option>Seleccionar</option>\n                            <option>Switch</option>\n                            <option>Router</option>\n                            <option>SFP</option>\n                            <option>Patch</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"\">\n                        <Form.Label>Modelo</Form.Label>\n                        <Form.Control size=\"sm\" value={this.state.model} name=\"model\" onChange={this.handleChange} type=\"text\" as=\"select\" placeholder=\"\" >\n                            {this.state.device === \"Switch\"\n                                ?\n                                <React.Fragment>\n                                    <option>Seleccionar</option>\n                                    <option>SG350</option>\n                                    <option>DELL</option>\n                                </React.Fragment>\n                                : this.state.device === \"Router\"\n                                    ?\n                                    <React.Fragment>\n                                        <option>Seleccionar</option>\n                                        <option>C881</option>\n                                        <option>C1921</option>\n                                    </React.Fragment>\n                                    : this.state.device === \"SFP\"\n                                        ?\n                                        <React.Fragment>\n                                            <option>Seleccionar</option>\n                                            <option>D20Km</option>\n                                            <option>U20Km</option>\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            <option>Seleccionar</option>\n                                            <option>UTP</option>\n                                            <option>FO</option>\n                                        </React.Fragment>}\n                        </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"\">\n                        <Form.Label>Serial</Form.Label>\n                        <Form.Control size=\"sm\" value={this.state.serial} name=\"serial\" onChange={this.handleChange} type=\"text\" placeholder=\"\">\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"\">\n                        <Form.Label>Descripcion</Form.Label>\n                        <Form.Control size=\"sm\" value={this.state.description} name=\"description\" onChange={this.handleChange} type=\"text\" placeholder=\"\">\n                        </Form.Control>\n                    </Form.Group>\n\n                </Form.Row>\n                <Button type=\"submit\" variant=\"warning\" onClick={this.addDevice}>\n                    Save\n                </Button>\n            </Form>\n        )\n    }\n}\n\nexport default AddHardware;\n","import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport AddHardware from './AddHardware';\n\nfunction AddHardwareModal(props) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        setShow(false);\n    }\n    const handleShow = () => {\n        setShow(true);\n    }\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                {props.action}\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <AddHardware\n                        idx={props.idx}\n                        action={props.action}\n                        device={props.device}\n                        reload={props.reload}\n                        toggle={handleClose}\n                        abonado={props.abonado} />\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default AddHardwareModal;\n","import React, { Component } from 'react';\nimport { Accordion, Card, Button, Row, Col, Form } from 'react-bootstrap';\nimport { blankState } from './testVariables';\nimport { RenderService, RenderHardware } from './RenderService';\nimport AddServiceModal from './AddServiceModal';\nimport AddHardwareModal from './AddHardwareModal';\nimport AddClientModal from './AddClientModal';\n\nexport default class ViewClient extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = blankState;\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.searchClient = this.searchClient.bind(this);\n    this.deleteService = this.deleteService.bind(this);\n    this.deleteDevice = this.deleteDevice.bind(this);\n\n  }\n\n  handleSearchChange(e) {\n    this.setState({\n      search: e.target.value\n    })\n  }\n\n  componentDidMount() {\n\n    const abonado = window.location.pathname.match(/\\d.*$/)\n    if (abonado) {\n      this.setState({search: abonado})\n      this.searchClient(null, abonado[0]);\n    }\n  }\n\n  searchClient(e, p) {\n    const abonado = p || this.state.search || this.state.abonado\n    const path = `/clients/client/${abonado}`;\n    fetch(path)\n      .then(res => res.json())\n      .then(data => {\n        this.setState(data ? { ...data, hideEditButton: false } : blankState)\n        this.props.history.push(`/clients/client/${abonado}`)\n      }\n      )\n      .catch(err => console.error(err));\n    if (e) e.preventDefault();\n  }\n\n  deleteService(id) {\n    if (window.confirm('Seguro que quieres eliminar este servicio?')) {\n      fetch(`/clients/service/${id}`, {\n        method: 'DELETE',\n        body: JSON.stringify({ abonado: this.state.abonado }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => console.log(res))\n        .then(() => this.searchClient(null, this.state.abonado))\n    }\n  }\n\n  deleteDevice(id) {\n    if (window.confirm('Seguro que quieres eliminar este dispositivo?')) {\n      fetch(`/clients/device/${id}`, {\n        method: 'DELETE',\n        body: JSON.stringify({ abonado: this.state.abonado }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(() => this.searchClient(null, this.state.abonado))\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Form inline style={{position: 'absolute', right: 90, top: 8}}  >\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={this.handleSearchChange}\n            value={this.state.search}\n            className=\"mr-sm-2\" />\n          <Button\n            type=\"submit\"\n            variant=\"outline-success\"\n            onClick={this.searchClient}>Search</Button>\n          </Form>\n          <Card>\n            <Card.Header as=\"h5\"> Datos del Cliente</Card.Header>\n            <Card.Body>\n              <Row>\n                <Col>\n                  <Card.Title> {`${this.state.abonado} - ${this.state.name}`} </Card.Title>\n                  <div><b>Domicilio:</b> {` ${this.state.address.street}, ${this.state.address.apto}`} </div>\n                  <div><b>Localidad:</b> {` ${this.state.address.location}, ${this.state.address.city}`} </div>\n                </Col>\n                <Col>\n                  <Card.Title> Informacion de Contacto </Card.Title>\n                  <div><b>Telefono:</b> {` ${this.state.telefono}`}</div>\n                  <div><b>Email:</b> {` ${this.state.email}`} </div>\n                </Col>\n                <Col>\n                  <Card.Title> Contacto Tecnico </Card.Title>\n                  <div><b>Domicilio:</b> {` ${this.state.address.street}, ${this.state.address.apto}`} </div>\n                  <div><b>Localidad:</b> {` ${this.state.address.location}, ${this.state.address.city}`} </div>\n                </Col>\n              </Row>\n            </Card.Body>\n            <br></br>\n            <div className=\"text-right mr-3 mb-3\">\n              <AddClientModal\n                title=\"Editar\"\n                action=\"edit\"\n                client={this.state}\n                hideEditButton={this.state.hideEditButton}\n                reload={this.searchClient}\n              />\n            </div>\n\n          </Card>\n\n          <br></br>\n\n          <Card>\n            <Card.Header as=\"h5\">Servicios</Card.Header>\n            <Card.Body>\n              <Accordion  >\n                {\n                  this.state.services.map((service, idx) => {\n                    const WrappedAddServiceModal = () => (\n                      <AddServiceModal\n                        id={service._id}\n                        idx={idx}\n                        action={\"Edit\"}\n                        hardware={this.state.hardware}\n                        service={service}\n                        reload={this.searchClient}\n                        abonado={this.state.abonado} />\n                    )\n\n                    return <RenderService\n                      id={service._id}\n                      abonado={this.state.abonado}\n                      clientName={this.state.name}\n                      deleteService={this.deleteService}\n                      wrapped={WrappedAddServiceModal}\n                      service={service}\n                      idx={idx} />\n                  })\n                }\n\n                <br></br>\n                <AddServiceModal\n                  action={\"Agregar Servicio\"}\n                  reload={this.searchClient}\n                  hardware={this.state.hardware}\n                  abonado={this.state.abonado} />\n                </Accordion>\n              </Card.Body>\n            </Card>\n\n            <br></br>\n            <Card>\n              <Card.Header as=\"h5\">Hardware</Card.Header>\n              <Card.Body>\n                <Accordion >\n                  {\n                    this.state.hardware.map((device, idx) => {\n                      const WrappedAddHardwareModal = () => {\n                        return <AddHardwareModal\n                          id={device._id}\n                          idx={idx}\n                          action={\"Edit\"}\n                          device={device}\n                          reload={this.searchClient}\n                          abonado={this.state.abonado} />\n                      }\n                      return (\n                        <RenderHardware\n                          id={device._id}\n                          deleteDevice={this.deleteDevice}\n                          wrapped={WrappedAddHardwareModal}\n                          device={device}\n                          idx={idx} />\n                      )\n                    })\n                  }\n\n                  <br></br>\n                  <AddHardwareModal\n                    action={\"Agregar Dispositivo\"}\n                    reload={this.searchClient}\n                    abonado={this.state.abonado} />\n                  </Accordion>\n                </Card.Body>\n              </Card>\n            </div>\n    )\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport AddClient from \"./AddClient.js\";\nimport AllClients from \"./AllClients.js\";\nimport Home from \"./Home\";\nimport ViewClient from \"./ViewClient\";\n\n\nfunction AppRouter() {\n\n    return (\n        <Router>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#home\">Imtegra</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                        <NavDropdown title=\"Clientes\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item as={Link} to=\"/clients/\">Todos</NavDropdown.Item>\n                            <NavDropdown.Item as={Link} to=\"/clients/implementacion\">En Implementacion</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item as={Link} to=\"/clients/add\">Agregar</NavDropdown.Item>\n                            <NavDropdown.Item as={Link} to=\"/clients/client\">Buscar</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    {/* <Form inline> */}\n                    {/*     <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" /> */}\n                    {/*     <Button variant=\"outline-success\">Search</Button> */}\n                    {/* </Form> */}\n                </Navbar.Collapse>\n            </Navbar>\n            <Route path=\"/\" exact component={Home} />\n            {/* <Route path=\"/clients/\" exact render={(props) => <AllClients {...props} />} /> */}\n            <Route path=\"/clients/\" exact component={AllClients} />\n            <Route path=\"/clients/implementacion\" component={AllClients} />\n            <Route path=\"/clients/add\" component={AddClient} />\n            <Route path=\"/clients/client\" render={props  => <ViewClient {...props} />} />\n        </Router>\n\n    );\n}\n\nexport default AppRouter;\n","import React, { Component } from 'react';\nimport AppRouter from './AppRouter'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <AppRouter />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}
